name: Deploy Staging for Testing

on:
  pull_request:
    branches:
      - main

env:
  STAGING_SRV_HOST: ${{ secrets.STAGING_SRV_HOST }}
  STAGING_SRV_USER: ${{ secrets.STAGING_SRV_USER }}
  STAGING_SRV_SIGNATURE: ${{ secrets.STAGING_SRV_SIGNATURE }}
  STAGING_DATA_PATH: ${{ secrets.STAGING_DATA_PATH }}
  CI_CD_SSH_KEY: ${{ secrets.CI_CD_SSH_KEY }}
  GCR_USERNAME: ${{ secrets.GCR_USERNAME }}
  GCR_ACCESS_TOKEN: ${{ secrets.GCR_ACCESS_TOKEN }}
  INSTANCE_HOST: ${{ secrets.INSTANCE_HOST }}
  REMOTE_COMMON_PARAMS: >-
    -o StrictHostKeyChecking=yes
    -o UserKnownHostsFile=${{ github.workspace }}/staging-srv-signature
    -i ${{ github.workspace }}/ci-cd-key
  SSH_SETUP_CMD: >-
    echo "${{ secrets.CI_CD_SSH_KEY }}" > ${{ github.workspace }}/ci-cd-key
    chmod 600 ${{ github.workspace }}/ci-cd-key
    echo "${{ secrets.STAGING_SRV_SIGNATURE }}" > ${{ github.workspace }}/staging-srv-signature
    chmod 600 ${{ github.workspace }}/staging-srv-signature

jobs:
  pre-build-checks:
    name: Pre-Build Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24
          cache: "npm"

      - name: Setup SSH
        run: ${{ env.SSH_SETUP_CMD }}

      - name: Cache Next.js build cache
        uses: actions/cache@v4
        with:
          path: |
            /.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Copy prod database and env file to local
        run: |
          scp ${{ env.REMOTE_COMMON_PARAMS }} ${{ env.STAGING_SRV_USER }}@${{ env.STAGING_SRV_HOST }}:${{ env.STAGING_DATA_PATH }}/db.sqlite3 ./db.sqlite3
          scp ${{ env.REMOTE_COMMON_PARAMS }} ${{ env.STAGING_SRV_USER }}@${{ env.STAGING_SRV_HOST }}:${{ env.STAGING_DATA_PATH }}/.env ./.env

      - name: Test migrations
        run: npm run migrate

      - name: Lint Check
        run: npm run lint

      - name: Build Check
        run: npm run build
